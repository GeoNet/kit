// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: sit.proto

// protoc --proto_path=protobuf/sit --go_out=./ protobuf/sit/sit.proto
// protoc --proto_path=protobuf/sit --java_out=sit_pb_java protobuf/sit/sit.proto

package sit_pb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A geographical point on NZGD2000
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latitude - geographical latitude of the point.
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Longitude - geographical longitude of the point.
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Elevation - geographical height of the point.
	Elevation float64 `protobuf:"fixed64,3,opt,name=elevation,proto3" json:"elevation,omitempty"`
	// Datum
	Datum string `protobuf:"bytes,4,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetElevation() float64 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *Point) GetDatum() string {
	if x != nil {
		return x.Datum
	}
	return ""
}

type AllSites struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites []*SitSite `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
}

func (x *AllSites) Reset() {
	*x = AllSites{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSites) ProtoMessage() {}

func (x *AllSites) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSites.ProtoReflect.Descriptor instead.
func (*AllSites) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{1}
}

func (x *AllSites) GetSites() []*SitSite {
	if x != nil {
		return x.Sites
	}
	return nil
}

// A site record (represents a seismic site OR gps mark)
type SitSite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComboCode         string               `protobuf:"bytes,1,opt,name=ComboCode,proto3" json:"ComboCode,omitempty"`
	Access            *Access              `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	EquipmentInstalls []*Equipment_Install `protobuf:"bytes,3,rep,name=equipment_installs,json=equipmentInstalls,proto3" json:"equipment_installs,omitempty"`
	Place             *Place               `protobuf:"bytes,4,opt,name=place,proto3" json:"place,omitempty"`
	People            []*Person            `protobuf:"bytes,5,rep,name=people,proto3" json:"people,omitempty"`
	Company           []*Company           `protobuf:"bytes,6,rep,name=company,proto3" json:"company,omitempty"`
	Sites             []*Site              `protobuf:"bytes,7,rep,name=sites,proto3" json:"sites,omitempty"`
	Power             []*PowerEquipment    `protobuf:"bytes,8,rep,name=power,proto3" json:"power,omitempty"`
	Conduit           []*CableConduit      `protobuf:"bytes,9,rep,name=conduit,proto3" json:"conduit,omitempty"`
	Enclosure         []*Enclosure         `protobuf:"bytes,10,rep,name=enclosure,proto3" json:"enclosure,omitempty"`
	Earthing          []*Earthing          `protobuf:"bytes,11,rep,name=earthing,proto3" json:"earthing,omitempty"`
}

func (x *SitSite) Reset() {
	*x = SitSite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SitSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SitSite) ProtoMessage() {}

func (x *SitSite) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SitSite.ProtoReflect.Descriptor instead.
func (*SitSite) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{2}
}

func (x *SitSite) GetComboCode() string {
	if x != nil {
		return x.ComboCode
	}
	return ""
}

func (x *SitSite) GetAccess() *Access {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *SitSite) GetEquipmentInstalls() []*Equipment_Install {
	if x != nil {
		return x.EquipmentInstalls
	}
	return nil
}

func (x *SitSite) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

func (x *SitSite) GetPeople() []*Person {
	if x != nil {
		return x.People
	}
	return nil
}

func (x *SitSite) GetCompany() []*Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *SitSite) GetSites() []*Site {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *SitSite) GetPower() []*PowerEquipment {
	if x != nil {
		return x.Power
	}
	return nil
}

func (x *SitSite) GetConduit() []*CableConduit {
	if x != nil {
		return x.Conduit
	}
	return nil
}

func (x *SitSite) GetEnclosure() []*Enclosure {
	if x != nil {
		return x.Enclosure
	}
	return nil
}

func (x *SitSite) GetEarthing() []*Earthing {
	if x != nil {
		return x.Earthing
	}
	return nil
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status          string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	LongName        string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	EstablishedBy   string `protobuf:"bytes,4,opt,name=established_by,json=establishedBy,proto3" json:"established_by,omitempty"`
	DateEstablished int64  `protobuf:"varint,5,opt,name=date_established,json=dateEstablished,proto3" json:"date_established,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{3}
}

func (x *Site) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Site) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Site) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Site) GetEstablishedBy() string {
	if x != nil {
		return x.EstablishedBy
	}
	return ""
}

func (x *Site) GetDateEstablished() int64 {
	if x != nil {
		return x.DateEstablished
	}
	return 0
}

// A time span that has a start and and end.
type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start - time in Unix seconds.
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// End - time in Unix seconds.  A future date of 9999-01-01T00:00:00Z is used to indicate still open.
	End int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{4}
}

func (x *Span) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Span) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

// An access record - access.csv
type Access struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Notes       string `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
	//Only contains company, address1-3 and city
	Address *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Access) Reset() {
	*x = Access{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access) ProtoMessage() {}

func (x *Access) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access.ProtoReflect.Descriptor instead.
func (*Access) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{5}
}

func (x *Access) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Access) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Access) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// An address record - address.csv
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company  string `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Address1 string `protobuf:"bytes,2,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2 string `protobuf:"bytes,3,opt,name=address2,proto3" json:"address2,omitempty"`
	Address3 string `protobuf:"bytes,4,opt,name=address3,proto3" json:"address3,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	State    string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Postcode string `protobuf:"bytes,7,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Country  string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	PoBox    string `protobuf:"bytes,9,opt,name=po_box,json=poBox,proto3" json:"po_box,omitempty"`
	Type     string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"` //string notes = 11;
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{6}
}

func (x *Address) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Address) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Address) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *Address) GetAddress3() string {
	if x != nil {
		return x.Address3
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetPoBox() string {
	if x != nil {
		return x.PoBox
	}
	return ""
}

func (x *Address) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// An equipment record - equipment.csv
type Equipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetNumber  string `protobuf:"bytes,1,opt,name=asset_number,json=assetNumber,proto3" json:"asset_number,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Manufacturer string `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model        string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Type         string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{7}
}

func (x *Equipment) GetAssetNumber() string {
	if x != nil {
		return x.AssetNumber
	}
	return ""
}

func (x *Equipment) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Equipment) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Equipment) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Equipment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Equipment) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// An equipment install record - equipment_installs.csv
type Equipment_Install struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipment *Equipment `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Installed *Span      `protobuf:"bytes,2,opt,name=installed,proto3" json:"installed,omitempty"`
}

func (x *Equipment_Install) Reset() {
	*x = Equipment_Install{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment_Install) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment_Install) ProtoMessage() {}

func (x *Equipment_Install) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment_Install.ProtoReflect.Descriptor instead.
func (*Equipment_Install) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{8}
}

func (x *Equipment_Install) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *Equipment_Install) GetInstalled() *Span {
	if x != nil {
		return x.Installed
	}
	return nil
}

// A record for a piece of power equipment - power.csv
type PowerEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Manufacturer     string `protobuf:"bytes,2,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model            string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Quantity         int64  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Configuration    string `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
	SystemVoltage    string `protobuf:"bytes,6,opt,name=system_voltage,json=systemVoltage,proto3" json:"system_voltage,omitempty"`
	InstallationDate int64  `protobuf:"varint,7,opt,name=installation_date,json=installationDate,proto3" json:"installation_date,omitempty"`
}

func (x *PowerEquipment) Reset() {
	*x = PowerEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerEquipment) ProtoMessage() {}

func (x *PowerEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerEquipment.ProtoReflect.Descriptor instead.
func (*PowerEquipment) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{9}
}

func (x *PowerEquipment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PowerEquipment) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *PowerEquipment) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *PowerEquipment) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PowerEquipment) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *PowerEquipment) GetSystemVoltage() string {
	if x != nil {
		return x.SystemVoltage
	}
	return ""
}

func (x *PowerEquipment) GetInstallationDate() int64 {
	if x != nil {
		return x.InstallationDate
	}
	return 0
}

// A record for a cable/conduit
type CableConduit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination      string  `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	ConduitType      string  `protobuf:"bytes,2,opt,name=conduit_type,json=conduitType,proto3" json:"conduit_type,omitempty"`
	ConduitLength    float64 `protobuf:"fixed64,3,opt,name=conduit_length,json=conduitLength,proto3" json:"conduit_length,omitempty"` //Should be in meters
	ConduitSize      float64 `protobuf:"fixed64,4,opt,name=conduit_size,json=conduitSize,proto3" json:"conduit_size,omitempty"`       //Should be in mm
	CableType        string  `protobuf:"bytes,5,opt,name=cable_type,json=cableType,proto3" json:"cable_type,omitempty"`
	CableLength      float64 `protobuf:"fixed64,6,opt,name=cable_length,json=cableLength,proto3" json:"cable_length,omitempty"` //Should be in meters
	InstallationDate int64   `protobuf:"varint,7,opt,name=installation_date,json=installationDate,proto3" json:"installation_date,omitempty"`
}

func (x *CableConduit) Reset() {
	*x = CableConduit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableConduit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableConduit) ProtoMessage() {}

func (x *CableConduit) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableConduit.ProtoReflect.Descriptor instead.
func (*CableConduit) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{10}
}

func (x *CableConduit) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CableConduit) GetConduitType() string {
	if x != nil {
		return x.ConduitType
	}
	return ""
}

func (x *CableConduit) GetConduitLength() float64 {
	if x != nil {
		return x.ConduitLength
	}
	return 0
}

func (x *CableConduit) GetConduitSize() float64 {
	if x != nil {
		return x.ConduitSize
	}
	return 0
}

func (x *CableConduit) GetCableType() string {
	if x != nil {
		return x.CableType
	}
	return ""
}

func (x *CableConduit) GetCableLength() float64 {
	if x != nil {
		return x.CableLength
	}
	return 0
}

func (x *CableConduit) GetInstallationDate() int64 {
	if x != nil {
		return x.InstallationDate
	}
	return 0
}

// A record for an enclosure
type Enclosure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclosureType   string  `protobuf:"bytes,1,opt,name=enclosure_type,json=enclosureType,proto3" json:"enclosure_type,omitempty"` //'cabinet' or 'hut'
	EnclosureBrand  string  `protobuf:"bytes,2,opt,name=enclosure_brand,json=enclosureBrand,proto3" json:"enclosure_brand,omitempty"`
	EnclosureX      float64 `protobuf:"fixed64,3,opt,name=enclosure_x,json=enclosureX,proto3" json:"enclosure_x,omitempty"` //x dimension in mm
	EnclosureY      float64 `protobuf:"fixed64,4,opt,name=enclosure_y,json=enclosureY,proto3" json:"enclosure_y,omitempty"` //y dimension in mm
	EnclosureHeight float64 `protobuf:"fixed64,5,opt,name=enclosure_height,json=enclosureHeight,proto3" json:"enclosure_height,omitempty"`
	FenceType       string  `protobuf:"bytes,6,opt,name=fence_type,json=fenceType,proto3" json:"fence_type,omitempty"`
	FenceX          float64 `protobuf:"fixed64,7,opt,name=fence_x,json=fenceX,proto3" json:"fence_x,omitempty"` //x dimension in meters
	FenceY          float64 `protobuf:"fixed64,8,opt,name=fence_y,json=fenceY,proto3" json:"fence_y,omitempty"` //y dimension in meters
}

func (x *Enclosure) Reset() {
	*x = Enclosure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enclosure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enclosure) ProtoMessage() {}

func (x *Enclosure) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enclosure.ProtoReflect.Descriptor instead.
func (*Enclosure) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{11}
}

func (x *Enclosure) GetEnclosureType() string {
	if x != nil {
		return x.EnclosureType
	}
	return ""
}

func (x *Enclosure) GetEnclosureBrand() string {
	if x != nil {
		return x.EnclosureBrand
	}
	return ""
}

func (x *Enclosure) GetEnclosureX() float64 {
	if x != nil {
		return x.EnclosureX
	}
	return 0
}

func (x *Enclosure) GetEnclosureY() float64 {
	if x != nil {
		return x.EnclosureY
	}
	return 0
}

func (x *Enclosure) GetEnclosureHeight() float64 {
	if x != nil {
		return x.EnclosureHeight
	}
	return 0
}

func (x *Enclosure) GetFenceType() string {
	if x != nil {
		return x.FenceType
	}
	return ""
}

func (x *Enclosure) GetFenceX() float64 {
	if x != nil {
		return x.FenceX
	}
	return 0
}

func (x *Enclosure) GetFenceY() float64 {
	if x != nil {
		return x.FenceY
	}
	return 0
}

// A place record - place.csv
type Place struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Point        *Point   `protobuf:"bytes,3,opt,name=point,proto3" json:"point,omitempty"`
	Notes        string   `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	CellCoverage string   `protobuf:"bytes,8,opt,name=cell_coverage,json=cellCoverage,proto3" json:"cell_coverage,omitempty"`
	Address      *Address `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Place) Reset() {
	*x = Place{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Place) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Place) ProtoMessage() {}

func (x *Place) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Place.ProtoReflect.Descriptor instead.
func (*Place) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{12}
}

func (x *Place) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Place) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *Place) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Place) GetCellCoverage() string {
	if x != nil {
		return x.CellCoverage
	}
	return ""
}

func (x *Place) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// A person record - place_person.csv
type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place            string     `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
	Surname          string     `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	FirstName        string     `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	Initial          string     `protobuf:"bytes,4,opt,name=initial,proto3" json:"initial,omitempty"`
	Email            string     `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Suffix           string     `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Title            string     `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	PreferredContact string     `protobuf:"bytes,8,opt,name=preferred_contact,json=preferredContact,proto3" json:"preferred_contact,omitempty"`
	Phone            string     `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	Notes            string     `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	Type             string     `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	Address          []*Address `protobuf:"bytes,12,rep,name=address,proto3" json:"address,omitempty"`
	Span             *Span      `protobuf:"bytes,13,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{13}
}

func (x *Person) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *Person) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetInitial() string {
	if x != nil {
		return x.Initial
	}
	return ""
}

func (x *Person) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Person) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Person) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Person) GetPreferredContact() string {
	if x != nil {
		return x.PreferredContact
	}
	return ""
}

func (x *Person) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Person) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Person) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Person) GetAddress() []*Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Person) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone   string     `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Address []*Address `protobuf:"bytes,3,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{14}
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Company) GetAddress() []*Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type Earthing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ohms float64 `protobuf:"fixed64,2,opt,name=ohms,proto3" json:"ohms,omitempty"`
}

func (x *Earthing) Reset() {
	*x = Earthing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Earthing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Earthing) ProtoMessage() {}

func (x *Earthing) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Earthing.ProtoReflect.Descriptor instead.
func (*Earthing) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{15}
}

func (x *Earthing) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Earthing) GetOhms() float64 {
	if x != nil {
		return x.Ohms
	}
	return 0
}

var File_sit_proto protoreflect.FileDescriptor

var file_sit_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x69, 0x74,
	0x22, 0x75, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x30, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x73, 0x69, 0x74, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x22, 0xd5, 0x03, 0x0a, 0x08, 0x73, 0x69,
	0x74, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x62, 0x6f,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x11, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x20, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x1f, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x73, 0x69, 0x74, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x69, 0x74, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x6c,
	0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x69,
	0x74, 0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x63,
	0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x65, 0x61, 0x72, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x45,
	0x61, 0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x65, 0x61, 0x72, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x22, 0xa1, 0x01, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x2e, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x68, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x82, 0x02, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x5f,
	0x62, 0x6f, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x42, 0x6f, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6a,
	0x0a, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x75,
	0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64,
	0x75, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x75,
	0x69, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x99, 0x02, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x58, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x59,
	0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x6c,
	0x6f, 0x73, 0x75, 0x72, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x22, 0xa0, 0x01, 0x0a,
	0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x69, 0x74, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xe9, 0x02, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x04,
	0x73, 0x70, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x73, 0x69, 0x74,
	0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x22, 0x5b, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x26, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x69, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x45, 0x61, 0x72, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x68, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x68, 0x6d, 0x73, 0x42, 0x38, 0x0a, 0x23,
	0x6e, 0x7a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x69,
	0x74, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x42, 0x07, 0x53, 0x69, 0x74, 0x53, 0x69, 0x74, 0x65, 0x5a, 0x08, 0x2e, 0x2f,
	0x73, 0x69, 0x74, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sit_proto_rawDescOnce sync.Once
	file_sit_proto_rawDescData = file_sit_proto_rawDesc
)

func file_sit_proto_rawDescGZIP() []byte {
	file_sit_proto_rawDescOnce.Do(func() {
		file_sit_proto_rawDescData = protoimpl.X.CompressGZIP(file_sit_proto_rawDescData)
	})
	return file_sit_proto_rawDescData
}

var file_sit_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_sit_proto_goTypes = []interface{}{
	(*Point)(nil),             // 0: sit.Point
	(*AllSites)(nil),          // 1: sit.all_sites
	(*SitSite)(nil),           // 2: sit.sit_site
	(*Site)(nil),              // 3: sit.Site
	(*Span)(nil),              // 4: sit.Span
	(*Access)(nil),            // 5: sit.Access
	(*Address)(nil),           // 6: sit.Address
	(*Equipment)(nil),         // 7: sit.Equipment
	(*Equipment_Install)(nil), // 8: sit.Equipment_Install
	(*PowerEquipment)(nil),    // 9: sit.PowerEquipment
	(*CableConduit)(nil),      // 10: sit.CableConduit
	(*Enclosure)(nil),         // 11: sit.Enclosure
	(*Place)(nil),             // 12: sit.Place
	(*Person)(nil),            // 13: sit.Person
	(*Company)(nil),           // 14: sit.Company
	(*Earthing)(nil),          // 15: sit.Earthing
}
var file_sit_proto_depIdxs = []int32{
	2,  // 0: sit.all_sites.sites:type_name -> sit.sit_site
	5,  // 1: sit.sit_site.access:type_name -> sit.Access
	8,  // 2: sit.sit_site.equipment_installs:type_name -> sit.Equipment_Install
	12, // 3: sit.sit_site.place:type_name -> sit.Place
	13, // 4: sit.sit_site.people:type_name -> sit.Person
	14, // 5: sit.sit_site.company:type_name -> sit.Company
	3,  // 6: sit.sit_site.sites:type_name -> sit.Site
	9,  // 7: sit.sit_site.power:type_name -> sit.PowerEquipment
	10, // 8: sit.sit_site.conduit:type_name -> sit.CableConduit
	11, // 9: sit.sit_site.enclosure:type_name -> sit.Enclosure
	15, // 10: sit.sit_site.earthing:type_name -> sit.Earthing
	6,  // 11: sit.Access.address:type_name -> sit.Address
	7,  // 12: sit.Equipment_Install.equipment:type_name -> sit.Equipment
	4,  // 13: sit.Equipment_Install.installed:type_name -> sit.Span
	0,  // 14: sit.Place.point:type_name -> sit.Point
	6,  // 15: sit.Place.address:type_name -> sit.Address
	6,  // 16: sit.Person.address:type_name -> sit.Address
	4,  // 17: sit.Person.span:type_name -> sit.Span
	6,  // 18: sit.Company.address:type_name -> sit.Address
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_sit_proto_init() }
func file_sit_proto_init() {
	if File_sit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSites); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SitSite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Access); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Equipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Equipment_Install); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableConduit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enclosure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Place); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sit_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Earthing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sit_proto_goTypes,
		DependencyIndexes: file_sit_proto_depIdxs,
		MessageInfos:      file_sit_proto_msgTypes,
	}.Build()
	File_sit_proto = out.File
	file_sit_proto_rawDesc = nil
	file_sit_proto_goTypes = nil
	file_sit_proto_depIdxs = nil
}
